- model: 1D
  description: Meta-train and test CNP, NP, ANP, MAML, meta-GPR.
  sourcecode:
    - '*.py'
    - guild.yml
  operations:
    train-np:
      requires:
        - file: data
      description: Meta-train and test NP
      main: run_1D_experiments
      output-scalars: no
      compare:
        - .step
        - Eval/log_likelihood
        - Eval/rmse
        - Eval/calibr_error
        - Loss/train
        - Loss/train_NP
        - .time
        - .started
        - =meta_learner
        - =covar_module
        - =mean_module
        - =n_samples_per_task
        - =n_train_tasks
        - =n_test_context_samples
        - =num_iter_fit
        - Eval/loss
      flags:
        meta_learner: 'neural_process'
        dataset: 'sin'
        random_seed: 25
        num_iter_fit: 1000
        task_batch_size: 4
        lr_decay: 0.97
        lr_params: 1e-3
        h_dim: 128
        weight_decay: 1e-3
        n_train_tasks: 100
        n_samples_per_task: 50
        n_test_context_samples: 5
        context_mask: None
    train-meta-gpr:
      main: run_1D_experiments
      requires:
        - file: data
          # This tells Guild to create a link to your project data dir in the run directory.
      flags:
        meta_learner: 'gpr_meta_mll'
        dataset: 'sin'
        random_seed: 25
        covar_module: NN
        mean_module: NN
        num_iter_fit: 1000
        weight_decay: 0.0
        task_batch_size: 4
        lr_decay: 0.97
        lr_params: 1e-3
        mean_nn_layers: 32,32,32,32
        kernel_nn_layers: 32,32,32,32
        n_train_tasks: 100
        n_samples_per_task: 50
        n_test_context_samples: 5
        context_mask: None
